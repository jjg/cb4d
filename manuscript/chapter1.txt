# Chapter 1: What is a Chromebook

Chromebook refers to a computer designed to run Google's Chrome OS.  The original Chromebooks were laptop computers (and arguably the work "book" in the name implies a laptop) however in recent years desktop-based computers running Chrome OS have become avaliable as well.  In both cases these machines are designed to run web-based applications either using a standard web browser interface or "installed" on the device in the form of Chrome Web Apps.  Installed applications behave very much like standard applications on other platforms and in some cases can operate in an "offline" mode with no Internet connection.

Today a wide range of Chrome OS devices are avaliable in prices ranging from $200.00 USD to over $2000.00.  Most Chrome OS devices are aimed at casual users with a price-point below $500.00 USD but tend to be well-made and more rugged than other simularily-priced devices.

The original Chromebook (Google's Cr-45) featured an Intel Atom processor although ARM-based processors have become more common in contemporary devices (this balance changes frequently).  Hardware details like processor, video and storage don't impact the primary audience for Chrome OS computers but they do come into play when using the device outside of the regular limits of Chrome OS.  We'll discuss this in detail later in this chapter.


## Chrome OS
Chrome OS is a Linux-based operating system heavily geared toward making web applications work well on low-power hardware.  Under the hood Chrome OS is Linux, and uses a Linux kernel and a lot of common Linux conventions, tools and utilities.  On top of this runs a specialized graphical user interface named "Aura" which provides the visual framework to contain browser windows and other controls that are displayed on the screen.  This is tightly integrated with Google's Chrome browser on which all Chrome Web Apps that run on the Chromebook are based.

The Chrome OS that ships on all Chromebooks is based on Google's open-source Chromium OS project (http://www.chromium.org/chromium-os) which is under constant development by programmers inside and outside of Google.  In fact it is possible to build a custom version of Chromium OS from source yourself and install it on your Chromebook.


## Chrome OS vs. regular Linux
As described above, Chrome OS is built from Linux components and on a Chromebook in "developer mode" it is possible to bring up a terminal and interact with the Linux shell directly.  Of course this is a very specialied Linux distribution and a small subset of Linux commands are avaliable, but if all you need to do software development work is an SSH client a Chromebook in developer mode may be just the ticket.

A beautiful side-effect of the fact that Chrome OS is built on top of the Linux kernel is that it is possible to install a complete Linux environment alongside Chrome OS which runs on top of the Google-supplied kernel.  This kernel provides support for all of the Chromebook's hardware and is optimized for the device, eliminating the most common frustrations found when trying to install and use Linux on other machines that were not designed to run Linux from the factory.


## Choosing a Chromebook
Undoubtably but the time you read this the range of avaliable Chromebooks will have changed, so it would be futile to describe specific models here.  A current list of Chrome OS devices can be found on Wikipedia (https://en.wikipedia.org/wiki/Chromebook#Chromebook_models).

If you intent to stick to developing with tools that run under Chrome OS (described in Part 1 of this book) the choice you make is more of a personal one.  Any current-production Chromebook should do the trick and you can select on that fits your personal needs for screen size, portability and cost.  On the other hand if you intent to go further and use regular Linux development tools you'll want to be sure that you choose a processor architecture that is compatible with the Linux programs you want to run, or that the source code is avaliable so you can recompile them as necissary.

Other device characteristics such as internal storage, CPU speed and core count, etc. are less important considerations as the approaches taken in this book will rely on using external USB-based storage when necissary and processor speed won't prevent a particular device from being used (just how convinient it may be).  In these areas let your budget decide what is best for you.

The only hardware requirements for any of the tools discussed in this book are an avaliable USB port (that will be used to extend storage using a flash drive), beyond that any new Chrome OS device should be sufficient.

As a point of reference when I made the switch to using a Chromebook I choose one of the most inexpensive devices avaliable at the time, and HP Chromebook 11.  This is an ARM-based Chromebook with 2GB of RAM and processing power simular to an Android telephone.  Running Chrome OS and Debian Linux (via Crouton) it replaced my fully-loaded Macbook Air as my daily development machine.  My work consists mostly of developing, writing and testing back-end systems written in Node.js, Python and C along with an assortment of console-based Linux media processing tools (ffmpeg and the like) and integrating with cloud service API's.  Most of my work does not involve using graphics processing tools or page-layout but when I've had an occasional need for this tools like GIMP and Inkscape run without issue on the little HP.  I haven't used it much for running large IDE development tools locally (Eclipse, etc.) but for work like that I often use dedicated development VM's running in the cloud where I can configure them for one specific purpose and then use them only for that application (I did this when I had the Macbook as well, it reduces the chances of mucking-up the IDE's environment when other things are installed).  Aside from processing power limitations or I/O bandwidth the screen size of the HP 11 is a bit tight for large IDE-style tools or heavy graphics/animation/video work (although I suppose an external display could address that).  Conversely I have used this Chromebook to run 3D modelling software and host/control software to operate 3D printers and other CAD/CAM software used to produce electronic and mechanical components for various projects.

Ultimately what it comes down to is determining what tools you need for the work you'd like to do.  If open-source Linux-based tools will meet your needs then it is likely that you can use a Chrome OS device along with Crouton to run these tools, and in many cases there are viable web-based alternatives as well which could be used on a Chromebook without modification.  If you're not sure yet if a Chromebook will meet your needs read on and I'll describe several ways to use Chrome OS devices for software development and you can decide for yourself if a Chromebook will meet your needs.
